
#FROM tensorflow/tensorflow:custom-op 
FROM ubuntu:18.04

# Setup the environment
ENV https_proxy http://proxy-chain.intel.com:912
ENV http_proxy http://proxy-chain.intel.com:911

RUN apt-get update &&  apt-get install -y \
    vim \
    python \
    python-pip \
    python3-pip \
    git \
    unzip zip wget \
    sudo \
    zlib1g zlib1g-dev bash-completion \
    build-essential cmake \
    clang-format-3.9

RUN pip install -U virtualenv==16.0.0

#ADD http://security.ubuntu.com/ubuntu/pool/main/o/openssl/libssl1.1_1.1.0g-2ubuntu4.3_amd64.deb ./libssl1.1_1.1.0g-2ubuntu4.3_amd64.deb
#RUN dpkg -i libssl1.1_1.1.0g-2ubuntu4.3_amd64.deb

#install latest cmake
ADD https://cmake.org/files/v3.7/cmake-3.7.2-Linux-x86_64.sh /cmake-3.7.2-Linux-x86_64.sh
RUN mkdir /opt/cmake
RUN sh /cmake-3.7.2-Linux-x86_64.sh --prefix=/opt/cmake --skip-license
RUN ln -s /opt/cmake/bin/cmake /usr/local/bin/cmake
RUN cmake --version

#Install Bazel 
ADD https://github.com/bazelbuild/bazel/releases/download/0.24.1/bazel-0.24.1-installer-linux-x86_64.sh ./bazel-0.24.1-installer-linux-x86_64.sh
RUN bash bazel-0.24.1-installer-linux-x86_64.sh
RUN bazel

#install gcc-4.8 and register both 7 and 4.8 with alternatives
RUN apt-get update && apt-get install -y gcc-4.8 g++-4.8
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-4.8 60 --slave /usr/bin/g++ g++ /usr/bin/g++-4.8 && \
  update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-7


#ADD http://ftp.us.debian.org/debian/pool/main/y/yaml-cpp0.3/libyaml-cpp0.3v5_0.3.0-1.2_amd64.deb libyaml-cpp0.3v5_0.3.0-1.2_amd64.deb
#RUN dpkg -i libyaml-cpp0.3v5_0.3.0-1.2_amd64.deb
